<?php 

/**
 * Zing Outsource Software
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@zosoft.net so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * We supply professinal magento support.
 *  - Custom Design, for layout, template, skin, style ...
 *  - Custom Module, for new featuers, actions, and other custom functions.
 *  - Product import/export, for import product from excel file or other online shop.
 *  - Other DIY for magento.
 * 
 * @category    ZoSoft
 * @package     Pz_WorldMap
 * 
 * @author      Cheng Wei <cheng.wei@zosoft.net>
 * @version     $$Id: online.phtml 18 2010-02-24 15:53:23Z cwei $$
 * @copyright   Copyright (C) 2010 Z.O. Software, China (http://www.zosoft.net)
 */

// http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/1.0/examples/advanced_example.html
// http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/

$visitors = $this->getVisitors();
$flagCustomer = $this->getSkinUrl('images/customer-flag.png');
$flagGuest = $this->getSkinUrl('images/guest-flag.png');
?>
<script src="<?php echo Mage::getBaseUrl('js')?>map/markerclusterer.js" type="text/javascript"></script>

<div class="content-header">
    <table cellspacing="0">
        <tr>
            <td style="width: 50%;"><h3 class="icon-head head-newsletter-list">
            	<?php echo $this->__('Online Customer Map (Markers)')?>
			</h3></td>
            <td class="form-buttons">
            </td>
        </tr>
    </table>
</div>
 
<div id="map_canvas" style="width: 1000px; height: 600px"></div>

<script type="text/javascript">

PzMarkerMap = Class.create();
PzMarkerMap.prototype = {
	map: null,
	options: null,
	markers: [],
    initialize: function(target, options, cluster) {
    	this.options = $H({
				zoom: 2,
				center: new google.maps.LatLng(25, 0),
				mapTypeId: google.maps.MapTypeId.ROADMAP
			}).merge(options);
		
    	this.cluster = $H({maxZoom: null,gridSize: null,}).merge(cluster);
        
    	this.map = new google.maps.Map($('map_canvas'),
    			this.options.toObject());
	},
	addMarker: function(data) {
		var marker = new google.maps.Marker(data);

		var info = new google.maps.InfoWindow({content:data.content});
	    google.maps.event.addListener(marker, "click", function() {
	    	info.open(this.map, marker);
	    }.bind(this));
	    
        this.markers.push(marker);
	},
	showMarkers: function() {
        this.markerClusterer = new MarkerClusterer(this.map, this.markers, 
                this.cluster.toObject());
	},
	clearClusters: function() {
		this.markerClusterer.clearMarkers();
	}
};
 
google.setOnLoadCallback(function() {
	var map = new PzMarkerMap('map_canvas');

	var visitors = <?php echo $this->getVisitorsJson()?>;
	var flagGuest = '<?php echo $flagGuest?>';
	var flagCustomer = '<?php echo $flagCustomer?>';
	
	visitors.each(function(el){
		map.addMarker({
        	position: new google.maps.LatLng(el.latitude, el.longitude),
            icon: el.customer ? flagCustomer : flagGuest,
            title: el.title,
            content: el.content
           });
	});
    
	map.showMarkers();
});

</script>